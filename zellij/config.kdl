theme "cyberdream" // Make sure this matches the name below

simplified_ui true

themes {
    cyberdream {
        text_unselected {
            base "#5ef1ff"     // Cyan
            background "#16181a" // Black
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#5ef1ff" // Cyan
            emphasis_2 "#5eff6c" // Green
            emphasis_3 "#bd5eff" // Magenta
        }
        text_selected {
            base "#5ef1ff"     // Cyan
            background "#3c4048" // Darker background
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#5ef1ff" // Cyan
            emphasis_2 "#5eff6c" // Green
            emphasis_3 "#bd5eff" // Magenta
        }
        ribbon_selected {
            base "#16181a"     // Black
            background "#5eff6c" // Green
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#ff6e5e" // Red
            emphasis_2 "#bd5eff" // Magenta
            emphasis_3 "#5ea1ff" // Blue
        }
        ribbon_unselected {
            base "#16181a"     // Black
            background "#5ef1ff" // Cyan
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#5ef1ff" // Cyan
            emphasis_2 "#5ea1ff" // Blue
            emphasis_3 "#bd5eff" // Magenta
        }
        table_title {
            base "#5eff6c"     // Green
            background "#16181a" // Black
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#5ef1ff" // Cyan
            emphasis_2 "#5eff6c" // Green
            emphasis_3 "#bd5eff" // Magenta
        }
        table_cell_selected {
            base "#5ef1ff"     // Cyan
            background "#3c4048" // Darker background
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#5ef1ff" // Cyan
            emphasis_2 "#5eff6c" // Green
            emphasis_3 "#bd5eff" // Magenta
        }
        table_cell_unselected {
            base "#5ef1ff"     // Cyan
            background "#16181a" // Black
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#5ef1ff" // Cyan
            emphasis_2 "#5eff6c" // Green
            emphasis_3 "#bd5eff" // Magenta
        }
        list_selected {
            base "#5ef1ff"     // Cyan
            background "#3c4048" // Darker background
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#5ef1ff" // Cyan
            emphasis_2 "#5eff6c" // Green
            emphasis_3 "#bd5eff" // Magenta
        }
        list_unselected {
            base "#5ef1ff"     // Cyan
            background "#16181a" // Black
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#5ef1ff" // Cyan
            emphasis_2 "#5eff6c" // Green
            emphasis_3 "#bd5eff" // Magenta
        }
        frame_selected {
            base "#5eff6c"     // Green
            background "#16181a" // Black
            emphasis_0 "#ff6e5e" // Red
            emphasis_1 "#5ef1ff" // Cyan
            emphasis_2 "#bd5eff" // Magenta
            emphasis_3 "#16181a" // Black
        }
        frame_highlight {
            base "#ff6e5e"     // Red
            background "#16181a" // Black
            emphasis_0 "#bd5eff" // Magenta
            emphasis_1 "#ff6e5e" // Red
            emphasis_2 "#ff6e5e" // Red
            emphasis_3 "#ff6e5e" // Red
        }
        exit_code_success {
            base "#5eff6c"     // Green
            background "#16181a" // Black
            emphasis_0 "#5ef1ff" // Cyan
            emphasis_1 "#16181a" // Black
            emphasis_2 "#bd5eff" // Magenta
            emphasis_3 "#5ea1ff" // Blue
        }
        exit_code_error {
            base "#ff6e5e"     // Red
            background "#16181a" // Black
            emphasis_0 "#f1ff5e" // Yellow (from your palette)
            emphasis_1 "#16181a" // Black
            emphasis_2 "#16181a" // Black
            emphasis_3 "#16181a" // Black
        }
        multiplayer_user_colors {
            player_1 "#bd5eff" // Magenta
            player_2 "#5ea1ff" // Blue
            player_3 "#16181a" // Black
            player_4 "#f1ff5e" // Yellow
            player_5 "#5ef1ff" // Cyan
            player_6 "#16181a" // Black
            player_7 "#ff6e5e" // Red
            player_8 "#16181a" // Black
            player_9 "#16181a" // Black
            player_10 "#16181a" // Black
        }
    }
}

keybinds clear-defaults=true {
    locked { bind "Ctrl g" { SwitchToMode "normal"; }
    }

    scroll { 
        bind "Ctrl d" { HalfPageScrollDown; }
        bind "Ctrl u" { HalfPageScrollUp; }
    }


    renametab { bind "Enter" { SwitchToMode "normal"; }
    }

    shared_except "locked" {
        bind "Alt -" { NewPane "down"; }
        bind "Alt \\" { NewPane "right"; }
        bind "Alt t" { NewTab; }
        bind "Alt r" { SwitchToMode "RenameTab"; }
        bind "Alt q" { CloseTab; }
        bind "Ctrl Right" { Resize "Right"; }
        bind "Ctrl Left" { Resize "Left"; }
        bind "Ctrl Down" { Resize "Down"; }
        bind "Ctrl Up" { Resize "Up"; }

        bind "Ctrl s" { SwitchToMode "scroll"; }

        bind "Ctrl h" {
            MessagePlugin "https://github.com/hiasr/vim-zellij-navigator/releases/download/0.2.1/vim-zellij-navigator.wasm" {
                name "move_focus_or_tab"
                payload "left"
                move_mod "ctrl"
            }
        }
        bind "Ctrl j" {
            MessagePlugin "https://github.com/hiasr/vim-zellij-navigator/releases/download/0.2.1/vim-zellij-navigator.wasm" {
                name "move_focus"
                payload "down"
                move_mod "ctrl"
            }
        }
        bind "Ctrl k" {
            MessagePlugin "https://github.com/hiasr/vim-zellij-navigator/releases/download/0.2.1/vim-zellij-navigator.wasm" {
                name "move_focus"
                payload "up"
                floating false
                move_mod "ctrl"
            }
        }
        bind "Ctrl l" {
            MessagePlugin "https://github.com/hiasr/vim-zellij-navigator/releases/download/0.2.1/vim-zellij-navigator.wasm" {
                name "move_focus_or_tab"
                payload "right"
                move_mod "ctrl"
            }
        }
    }
}

// Plugin aliases - can be used to change the implementation of Zellij
// changing these requires a restart to take effect
plugins {
    compact-bar location="zellij:compact-bar"
    configuration location="zellij:configuration"
    plugin-manager location="zellij:plugin-manager"
    session-manager location="zellij:session-manager"
    strider location="zellij:strider"
    welcome-screen location="zellij:session-manager" {
        welcome_screen true
    }
}
 
// Use a simplified UI without special fonts (arrow glyphs)
// Options:
//   - true
//   - false (Default)
// 
// simplified_ui true
 
// Choose the theme that is specified in the themes section.
// Default: default
// 
// theme "dracula"
 
// Choose the base input mode of zellij.
// Default: normal
// 
// default_mode "locked"
 
// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
// 
default_shell "fish"
 
// Choose the path to override cwd that zellij will use for opening new panes
// 
// default_cwd "/tmp"
 
// The name of the default layout to load on startup
// Default: "default"
// 
default_layout "compact"
 
// The folder in which Zellij will look for layouts
// (Requires restart)
// 
// layout_dir "/tmp"
 
// The folder in which Zellij will look for themes
// (Requires restart)
// 
// theme_dir "/tmp"
 
// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// Options:
//   - true (default)
//   - false
// 
mouse_mode true
 
// Toggle having pane frames around the panes
// Options:
//   - true (default, enabled)
//   - false
// 
pane_frames false
 
// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
// Default: false
// 
// mirror_session true
 
// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
// 
// on_force_close "quit"
 
// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
// Default value: 10000
// 
// scroll_buffer_size 10000
 
// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx
// 
// copy_command "pbcopy"
 
// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
// 
// copy_clipboard "primary"
 
// Enable automatic copying (and clearing) of selection when releasing mouse
// Default: true
// 
// copy_on_select true
 
// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
// scrollback_editor "/usr/bin/vim"
 
// A fixed name to always give the Zellij session.
// Consider also setting `attach_to_session true,`
// otherwise this will error if such a session exists.
// Default: <RANDOM>
// 
// session_name "My singleton session"
 
// When `session_name` is provided, attaches to that session
// if it is already running or creates it otherwise.
// Default: false
// 
// attach_to_session true
 
// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
// 
// auto_layout false
 
// Whether sessions should be serialized to the cache folder (including their tabs/panes, cwds and running commands) so that they can later be resurrected
// Options:
//   - true (default)
//   - false
// 
// session_serialization false
 
// Whether pane viewports are serialized along with the session, default is false
// Options:
//   - true
//   - false (default)
// 
// serialize_pane_viewport false
 
// Scrollback lines to serialize along with the pane viewport when serializing sessions, 0
// defaults to the scrollback size. If this number is higher than the scrollback size, it will
// also default to the scrollback size. This does nothing if `serialize_pane_viewport` is not true.
// 
// scrollback_lines_to_serialize 10000
 
// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// (Requires restart)
// Default: true
// 
// styled_underlines false
 
// How often in seconds sessions are serialized
// 
// serialization_interval 10000
 
// Enable or disable writing of session metadata to disk (if disabled, other sessions might not know
// metadata info on this session)
// (Requires restart)
// Default: false
// 
// disable_session_metadata false
 
// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host terminal must also support it)
// (Requires restart)
// Default: true (if the host terminal supports it)
// 
// support_kitty_keyboard_protocol false
 
// Whether to stack panes when resizing beyond a certain size
// Default: true
// 
// stacked_resize false
 
// Whether to show tips on startup
// Default: true
// 
show_startup_tips false
 
// Whether to show release notes on first version run
// Default: true
// 
// show_release_notes false
